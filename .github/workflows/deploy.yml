name: Deploy to GitHub Pages # Name of the workflow for identification

on: # Specifies when the workflow should run
    push: # Trigger on push events
        branches: [ main, master ] # Only run on pushes to main or master branches
    workflow_dispatch: # Allows manual triggering of the workflow

permissions: # Sets permissions for the workflow
    contents: read # Allows reading repository contents
    pages: write # Allows writing to GitHub Pages
    id-token: write # Required for OIDC authentication with GitHub Pages

concurrency: # Controls concurrency for workflow runs
    group: "pages" # Groups runs by "pages"
    cancel-in-progress: false # Do not cancel in-progress runs

jobs: # Defines jobs to run
    build: # First job: build the site
        runs-on: ubuntu-latest # Use the latest Ubuntu runner
        steps: # Steps to execute in this job
            - name: Checkout # Step to checkout repository code
                uses: actions/checkout@v4 # Uses the official checkout action

            - name: Setup PHP # Step to set up PHP environment
                uses: shivammathur/setup-php@v2 # Uses PHP setup action
                with:
                    php-version: '8.2' # Specifies PHP version 8.2

            - name: Convert PHP to HTML # Converts PHP files to static HTML
                run: |
                    # Create output directory
                    mkdir -p dist # Make 'dist' directory for output files
                    
                    # Copy images directory
                    cp -r images dist/ # Copy images to 'dist' for static hosting
                    
                    # Convert index.php to index.html
                    php -f index.php > dist/index.html # Render index.php to HTML
                    
                    # Convert other PHP files if they exist
                    if [ -f "about.php" ]; then
                        php -f about.php > dist/about.html # Render about.php to HTML
                    fi
                    
                    if [ -f "shop.php" ]; then
                        php -f shop.php > dist/shop.html # Render shop.php to HTML
                    fi
                    
                    if [ -f "register.php" ]; then
                        php -f register.php > dist/register.html # Render register.php to HTML
                    fi
                    
                    if [ -f "login.php" ]; then
                        php -f login.php > dist/login.html # Render login.php to HTML
                    fi
                    
                    if [ -f "agb.php" ]; then
                        php -f agb.php > dist/agb.html # Render agb.php to HTML
                    fi

            - name: Fix HTML links # Updates links in HTML files to use .html instead of .php
                run: |
                    # Replace .php links with .html in all HTML files
                    find dist -name "*.html" -type f -exec sed -i 's/href="[^"]*\.php"/href="&"/g; s/\.php"/.html"/g' {} \; # Fix href links
                    find dist -name "*.html" -type f -exec sed -i 's/action="[^"]*\.php"/action="&"/g; s/\.php"/.html"/g' {} \; # Fix form action links

            - name: Setup Pages # Prepares GitHub Pages deployment
                uses: actions/configure-pages@v4 # Uses official configure-pages action

            - name: Upload artifact # Uploads the built site as an artifact
                uses: actions/upload-pages-artifact@v3 # Uses official upload-pages-artifact action
                with:
                    path: './dist' # Specifies the path to upload

    deploy: # Second job: deploy the site
        environment:
            name: github-pages # Sets the deployment environment to GitHub Pages
            url: ${{ steps.deployment.outputs.page_url }} # Sets the URL for the environment using the output from the deploy step

            # url: This is an environment parameter that tells GitHub "here is the URL where the website is running"
            # ${{ }} = GitHub Actions syntax for variables/expressions
            # steps. = Refers to other steps in this job
            # deployment = The ID of the deploy step (line 81: id: deployment)
            # .outputs. = Accesses the output values of this step
            # page_url = The specific output value containing the final website URL
            
        runs-on: ubuntu-latest # Use the latest Ubuntu runner
        needs: build # Waits for the build job to finish
        steps:
            - name: Deploy to GitHub Pages # Deploys the artifact to GitHub Pages
                id: deployment # Sets an ID for this step to reference outputs
                uses: actions/deploy-pages@v4 # Uses official deploy-pages action
